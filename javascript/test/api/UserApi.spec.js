/**
 * Starfish Labz API
 * This page provides documentation on how to use the Starfish Labz API. Please contact us should you wish to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StarfishLabzApi);
  }
}(this, function(expect, StarfishLabzApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StarfishLabzApi.UserApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserApi', function() {
    describe('apiPublicV1UserValidateEmailEmailGet', function() {
      it('should call apiPublicV1UserValidateEmailEmailGet successfully', function(done) {
        //uncomment below and update the code to test apiPublicV1UserValidateEmailEmailGet
        //instance.apiPublicV1UserValidateEmailEmailGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiPublicV1UserValidateUsernameUsernameGet', function() {
      it('should call apiPublicV1UserValidateUsernameUsernameGet successfully', function(done) {
        //uncomment below and update the code to test apiPublicV1UserValidateUsernameUsernameGet
        //instance.apiPublicV1UserValidateUsernameUsernameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserCollection', function() {
      it('should call getUserCollection successfully', function(done) {
        //uncomment below and update the code to test getUserCollection
        //instance.getUserCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserItem', function() {
      it('should call getUserItem successfully', function(done) {
        //uncomment below and update the code to test getUserItem
        //instance.getUserItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchUserItem', function() {
      it('should call patchUserItem successfully', function(done) {
        //uncomment below and update the code to test patchUserItem
        //instance.patchUserItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postUserCollection', function() {
      it('should call postUserCollection successfully', function(done) {
        //uncomment below and update the code to test postUserCollection
        //instance.postUserCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
