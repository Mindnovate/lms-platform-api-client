/**
 * Starfish Labz API
 * This page provides documentation on how to use the Starfish Labz API. Please contact us should you wish to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InlineResponse2008 from '../model/InlineResponse2008';
import RatingRatingWrite from '../model/RatingRatingWrite';
import RatingjsonldRatingDetail from '../model/RatingjsonldRatingDetail';
import RatingjsonldRatingWrite from '../model/RatingjsonldRatingWrite';

/**
* Rating service.
* @module api/RatingApi
* @version 1.0.0
*/
export default class RatingApi {

    /**
    * Constructs a new RatingApi. 
    * @alias module:api/RatingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the deleteRatingItem operation.
     * @callback module:api/RatingApi~deleteRatingItemCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the Rating resource.
     * @param {module:api/RatingApi~deleteRatingItemCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteRatingItem(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/auth/v1/rating/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getRatingCollection operation.
     * @callback module:api/RatingApi~getRatingCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2008} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of Rating resources.
     * @param {Object} opts Optional parameters
     * @param {module:api/RatingApi~getRatingCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2008}
     */
    getRatingCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'teaching_class.id': opts['teachingClassId'],
        'teaching_class.id[]': this.apiClient.buildCollectionParam(opts['teachingClassId'], 'multi'),
        'rating_students.student.id': opts['ratingStudentsStudentId'],
        'rating_students.student.id[]': this.apiClient.buildCollectionParam(opts['ratingStudentsStudentId'], 'multi'),
        'page': opts['page'],
        'itemsPerPage': opts['itemsPerPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = InlineResponse2008;

      return this.apiClient.callApi(
        '/api/auth/v1/ratings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getRatingItem operation.
     * @callback module:api/RatingApi~getRatingItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RatingjsonldRatingDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a Rating resource.
     * @param {module:api/RatingApi~getRatingItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RatingjsonldRatingDetail}
     */
    getRatingItem(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = RatingjsonldRatingDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/rating/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the patchRatingItem operation.
     * @callback module:api/RatingApi~patchRatingItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RatingjsonldRatingDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the Rating resource.
     * @param {Object} opts Optional parameters
     * @param {module:api/RatingApi~patchRatingItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RatingjsonldRatingDetail}
     */
    patchRatingItem(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/ld+json', 'application/json'];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = RatingjsonldRatingDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/rating/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the postRatingCollection operation.
     * @callback module:api/RatingApi~postRatingCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RatingjsonldRatingDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Rating resource.
     * @param {Object} opts Optional parameters
     * @param {module:api/RatingApi~postRatingCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RatingjsonldRatingDetail}
     */
    postRatingCollection(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/ld+json', 'application/json', 'text/html'];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = RatingjsonldRatingDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/rating', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
