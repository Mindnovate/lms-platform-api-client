/**
 * Starfish Labz API
 * This page provides documentation on how to use the Starfish Labz API. Please contact us should you wish to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InlineResponse20013 from '../model/InlineResponse20013';
import StudentjsonldStudentDetail from '../model/StudentjsonldStudentDetail';

/**
* Student service.
* @module api/StudentApi
* @version 1.0.0
*/
export default class StudentApi {

    /**
    * Constructs a new StudentApi. 
    * @alias module:api/StudentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getStudentCollection operation.
     * @callback module:api/StudentApi~getStudentCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20013} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of Student resources.
     * @param {Object} opts Optional parameters
     * @param {module:api/StudentApi~getStudentCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20013}
     */
    getStudentCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'teaching_class_students.teaching_class.id': opts['teachingClassStudentsTeachingClassId'],
        'teaching_class_students.teaching_class.id[]': this.apiClient.buildCollectionParam(opts['teachingClassStudentsTeachingClassId'], 'multi'),
        'id': opts['id'],
        'id[]': this.apiClient.buildCollectionParam(opts['id'], 'multi'),
        'page': opts['page'],
        'itemsPerPage': opts['itemsPerPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = InlineResponse20013;

      return this.apiClient.callApi(
        '/api/auth/v1/students', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getStudentItem operation.
     * @callback module:api/StudentApi~getStudentItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StudentjsonldStudentDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a Student resource.
     * @param {module:api/StudentApi~getStudentItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StudentjsonldStudentDetail}
     */
    getStudentItem(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = StudentjsonldStudentDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/student/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
