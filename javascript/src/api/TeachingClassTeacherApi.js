/**
 * Starfish Labz API
 * This page provides documentation on how to use the Starfish Labz API. Please contact us should you wish to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InlineResponse20018 from '../model/InlineResponse20018';
import TeachingClassTeacherjsonldTeachingClassTeacherDetail from '../model/TeachingClassTeacherjsonldTeachingClassTeacherDetail';

/**
* TeachingClassTeacher service.
* @module api/TeachingClassTeacherApi
* @version 1.0.0
*/
export default class TeachingClassTeacherApi {

    /**
    * Constructs a new TeachingClassTeacherApi. 
    * @alias module:api/TeachingClassTeacherApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the deleteTeachingClassTeacherItem operation.
     * @callback module:api/TeachingClassTeacherApi~deleteTeachingClassTeacherItemCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TeachingClassTeacher resource.
     * @param {module:api/TeachingClassTeacherApi~deleteTeachingClassTeacherItemCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteTeachingClassTeacherItem(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/auth/v1/teaching-class-teacher/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getTeachingClassTeacherCollection operation.
     * @callback module:api/TeachingClassTeacherApi~getTeachingClassTeacherCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20018} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TeachingClassTeacher resources.
     * @param {Object} opts Optional parameters
     * @param {module:api/TeachingClassTeacherApi~getTeachingClassTeacherCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20018}
     */
    getTeachingClassTeacherCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'teaching_class.id': opts['teachingClassId'],
        'teaching_class.id[]': this.apiClient.buildCollectionParam(opts['teachingClassId'], 'multi'),
        'teacher.id': opts['teacherId'],
        'teacher.id[]': this.apiClient.buildCollectionParam(opts['teacherId'], 'multi'),
        'page': opts['page'],
        'itemsPerPage': opts['itemsPerPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = InlineResponse20018;

      return this.apiClient.callApi(
        '/api/auth/v1/teaching-class-teachers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getTeachingClassTeacherItem operation.
     * @callback module:api/TeachingClassTeacherApi~getTeachingClassTeacherItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TeachingClassTeacherjsonldTeachingClassTeacherDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TeachingClassTeacher resource.
     * @param {module:api/TeachingClassTeacherApi~getTeachingClassTeacherItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TeachingClassTeacherjsonldTeachingClassTeacherDetail}
     */
    getTeachingClassTeacherItem(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = TeachingClassTeacherjsonldTeachingClassTeacherDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/teaching-class-teacher/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
