/**
 * Starfish Labz API
 * This page provides documentation on how to use the Starfish Labz API. Please contact us should you wish to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InlineResponse20020 from '../model/InlineResponse20020';
import UserUserCreate from '../model/UserUserCreate';
import UserUserWrite from '../model/UserUserWrite';
import UserjsonldUserCreate from '../model/UserjsonldUserCreate';
import UserjsonldUserDetail from '../model/UserjsonldUserDetail';
import UserjsonldUserWrite from '../model/UserjsonldUserWrite';

/**
* User service.
* @module api/UserApi
* @version 1.0.0
*/
export default class UserApi {

    /**
    * Constructs a new UserApi. 
    * @alias module:api/UserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiPublicV1UserValidateEmailEmailGet operation.
     * @callback module:api/UserApi~apiPublicV1UserValidateEmailEmailGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validates a given email.
     * @param {module:api/UserApi~apiPublicV1UserValidateEmailEmailGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPublicV1UserValidateEmailEmailGet(email, callback) {
      let postBody = null;

      let pathParams = {
        'email': email
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/public/v1/user/validate/email/{email}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiPublicV1UserValidateUsernameUsernameGet operation.
     * @callback module:api/UserApi~apiPublicV1UserValidateUsernameUsernameGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validates a given username.
     * @param {module:api/UserApi~apiPublicV1UserValidateUsernameUsernameGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPublicV1UserValidateUsernameUsernameGet(username, callback) {
      let postBody = null;

      let pathParams = {
        'username': username
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/public/v1/user/validate/username/{username}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getUserCollection operation.
     * @callback module:api/UserApi~getUserCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20020} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of User resources.
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~getUserCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20020}
     */
    getUserCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'id[]': this.apiClient.buildCollectionParam(opts['id'], 'multi'),
        'page': opts['page'],
        'itemsPerPage': opts['itemsPerPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = InlineResponse20020;

      return this.apiClient.callApi(
        '/api/auth/v1/users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getUserItem operation.
     * @callback module:api/UserApi~getUserItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserjsonldUserDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a User resource.
     * @param {module:api/UserApi~getUserItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserjsonldUserDetail}
     */
    getUserItem(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = UserjsonldUserDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/user/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the patchUserItem operation.
     * @callback module:api/UserApi~patchUserItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserjsonldUserDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the User resource.
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~patchUserItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserjsonldUserDetail}
     */
    patchUserItem(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/ld+json', 'application/json'];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = UserjsonldUserDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/user/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the postUserCollection operation.
     * @callback module:api/UserApi~postUserCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserjsonldUserDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a User resource.
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~postUserCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserjsonldUserDetail}
     */
    postUserCollection(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/ld+json', 'application/json', 'text/html'];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = UserjsonldUserDetail;

      return this.apiClient.callApi(
        '/api/public/v1/user', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
