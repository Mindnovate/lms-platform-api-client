/**
 * Starfish Labz API
 * This page provides documentation on how to use the Starfish Labz API. Please contact us should you wish to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InlineResponse2004 from '../model/InlineResponse2004';
import OtherUserjsonldOtherUserDetail from '../model/OtherUserjsonldOtherUserDetail';

/**
* OtherUser service.
* @module api/OtherUserApi
* @version 1.0.0
*/
export default class OtherUserApi {

    /**
    * Constructs a new OtherUserApi. 
    * @alias module:api/OtherUserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getOtherUserCollection operation.
     * @callback module:api/OtherUserApi~getOtherUserCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2004} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of OtherUser resources.
     * @param {Object} opts Optional parameters
     * @param {module:api/OtherUserApi~getOtherUserCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2004}
     */
    getOtherUserCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'school.id': opts['schoolId'],
        'school.id[]': this.apiClient.buildCollectionParam(opts['schoolId'], 'multi'),
        'id': opts['id'],
        'id[]': this.apiClient.buildCollectionParam(opts['id'], 'multi'),
        'page': opts['page'],
        'itemsPerPage': opts['itemsPerPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = InlineResponse2004;

      return this.apiClient.callApi(
        '/api/auth/v1/other-users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getOtherUserItem operation.
     * @callback module:api/OtherUserApi~getOtherUserItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OtherUserjsonldOtherUserDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a OtherUser resource.
     * @param {module:api/OtherUserApi~getOtherUserItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OtherUserjsonldOtherUserDetail}
     */
    getOtherUserItem(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = OtherUserjsonldOtherUserDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/other-user/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
