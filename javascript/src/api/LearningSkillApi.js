/**
 * Starfish Labz API
 * This page provides documentation on how to use the Starfish Labz API. Please contact us should you wish to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InlineResponse2001 from '../model/InlineResponse2001';
import LearningSkillLearningSkillWrite from '../model/LearningSkillLearningSkillWrite';
import LearningSkilljsonldLearningSkillDetail from '../model/LearningSkilljsonldLearningSkillDetail';
import LearningSkilljsonldLearningSkillWrite from '../model/LearningSkilljsonldLearningSkillWrite';

/**
* LearningSkill service.
* @module api/LearningSkillApi
* @version 1.0.0
*/
export default class LearningSkillApi {

    /**
    * Constructs a new LearningSkillApi. 
    * @alias module:api/LearningSkillApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getLearningSkillCollection operation.
     * @callback module:api/LearningSkillApi~getLearningSkillCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of LearningSkill resources.
     * @param {Object} opts Optional parameters
     * @param {module:api/LearningSkillApi~getLearningSkillCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2001}
     */
    getLearningSkillCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'id[]': this.apiClient.buildCollectionParam(opts['id'], 'multi'),
        'is_public': opts['isPublic'],
        'is_public[]': this.apiClient.buildCollectionParam(opts['isPublic'], 'multi'),
        'creator.id': opts['creatorId'],
        'creator.id[]': this.apiClient.buildCollectionParam(opts['creatorId'], 'multi'),
        'page': opts['page'],
        'itemsPerPage': opts['itemsPerPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/api/auth/v1/learning-skills', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getLearningSkillItem operation.
     * @callback module:api/LearningSkillApi~getLearningSkillItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LearningSkilljsonldLearningSkillDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a LearningSkill resource.
     * @param {module:api/LearningSkillApi~getLearningSkillItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LearningSkilljsonldLearningSkillDetail}
     */
    getLearningSkillItem(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = LearningSkilljsonldLearningSkillDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/learning-skill/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the postLearningSkillCollection operation.
     * @callback module:api/LearningSkillApi~postLearningSkillCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LearningSkilljsonldLearningSkillDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a LearningSkill resource.
     * @param {Object} opts Optional parameters
     * @param {module:api/LearningSkillApi~postLearningSkillCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LearningSkilljsonldLearningSkillDetail}
     */
    postLearningSkillCollection(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/ld+json', 'application/json', 'text/html'];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = LearningSkilljsonldLearningSkillDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/learning-skill', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the putLearningSkillItem operation.
     * @callback module:api/LearningSkillApi~putLearningSkillItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LearningSkilljsonldLearningSkillDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the LearningSkill resource.
     * @param {Object} opts Optional parameters
     * @param {module:api/LearningSkillApi~putLearningSkillItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LearningSkilljsonldLearningSkillDetail}
     */
    putLearningSkillItem(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/ld+json', 'application/json', 'text/html'];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = LearningSkilljsonldLearningSkillDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/learning-skill/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
