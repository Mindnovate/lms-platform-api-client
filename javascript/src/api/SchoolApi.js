/**
 * Starfish Labz API
 * This page provides documentation on how to use the Starfish Labz API. Please contact us should you wish to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InlineResponse2009 from '../model/InlineResponse2009';
import SchoolSchoolWrite from '../model/SchoolSchoolWrite';
import SchooljsonldSchoolDetail from '../model/SchooljsonldSchoolDetail';
import SchooljsonldSchoolWrite from '../model/SchooljsonldSchoolWrite';

/**
* School service.
* @module api/SchoolApi
* @version 1.0.0
*/
export default class SchoolApi {

    /**
    * Constructs a new SchoolApi. 
    * @alias module:api/SchoolApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getPublicSchoolCollection operation.
     * @callback module:api/SchoolApi~getPublicSchoolCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2009} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of School resources.
     * @param {Object} opts Optional parameters
     * @param {module:api/SchoolApi~getPublicSchoolCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2009}
     */
    getPublicSchoolCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name'],
        'page': opts['page'],
        'itemsPerPage': opts['itemsPerPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = InlineResponse2009;

      return this.apiClient.callApi(
        '/api/public/v1/schools', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSchoolCollection operation.
     * @callback module:api/SchoolApi~getSchoolCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2009} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of School resources.
     * @param {Object} opts Optional parameters
     * @param {module:api/SchoolApi~getSchoolCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2009}
     */
    getSchoolCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name'],
        'page': opts['page'],
        'itemsPerPage': opts['itemsPerPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = InlineResponse2009;

      return this.apiClient.callApi(
        '/api/auth/v1/schools', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSchoolItem operation.
     * @callback module:api/SchoolApi~getSchoolItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SchooljsonldSchoolDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a School resource.
     * @param {module:api/SchoolApi~getSchoolItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SchooljsonldSchoolDetail}
     */
    getSchoolItem(id, callback) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = SchooljsonldSchoolDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/school/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the postSchoolCollection operation.
     * @callback module:api/SchoolApi~postSchoolCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SchooljsonldSchoolDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a School resource.
     * @param {Object} opts Optional parameters
     * @param {module:api/SchoolApi~postSchoolCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SchooljsonldSchoolDetail}
     */
    postSchoolCollection(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = ['application/ld+json', 'application/json', 'text/html'];
      let accepts = ['application/ld+json', 'application/json', 'text/html'];
      let returnType = SchooljsonldSchoolDetail;

      return this.apiClient.callApi(
        '/api/auth/v1/school', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
