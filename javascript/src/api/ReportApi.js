/**
 * Starfish Labz API
 * This page provides documentation on how to use the Starfish Labz API. Please contact us should you wish to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
* Report service.
* @module api/ReportApi
* @version 1.0.0
*/
export default class ReportApi {

    /**
    * Constructs a new ReportApi. 
    * @alias module:api/ReportApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiAuthV1ReportPdfClassIdGet operation.
     * @callback module:api/ReportApi~apiAuthV1ReportPdfClassIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a class report in PDF format.
     * @param {Object} opts Optional parameters
     * @param {module:api/ReportApi~apiAuthV1ReportPdfClassIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiAuthV1ReportPdfClassIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'startDate': opts[''],
        'endDate': opts['']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/auth/v1/report/pdf/class/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiAuthV1ReportPdfStudentIdGet operation.
     * @callback module:api/ReportApi~apiAuthV1ReportPdfStudentIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a student report in PDF format.
     * @param {Object} opts Optional parameters
     * @param {module:api/ReportApi~apiAuthV1ReportPdfStudentIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiAuthV1ReportPdfStudentIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'startDate': opts[''],
        'endDate': opts[''],
        'teachingClassId': opts['']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/auth/v1/report/pdf/student/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiAuthV1ReportSpreadsheetClassIdGet operation.
     * @callback module:api/ReportApi~apiAuthV1ReportSpreadsheetClassIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a class report in Excel format.
     * @param {Object} opts Optional parameters
     * @param {module:api/ReportApi~apiAuthV1ReportSpreadsheetClassIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiAuthV1ReportSpreadsheetClassIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'startDate': opts[''],
        'endDate': opts['']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/auth/v1/report/spreadsheet/class/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiAuthV1ReportSpreadsheetStudentIdGet operation.
     * @callback module:api/ReportApi~apiAuthV1ReportSpreadsheetStudentIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a student report in Excel format.
     * @param {Object} opts Optional parameters
     * @param {module:api/ReportApi~apiAuthV1ReportSpreadsheetStudentIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiAuthV1ReportSpreadsheetStudentIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'startDate': opts[''],
        'endDate': opts[''],
        'teachingClassId': opts['']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/auth/v1/report/spreadsheet/student/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
